{"ast":null,"code":"var _jsxFileName = \"/Users/jan/code/ironhack/bootcamp/run/w7d3/ironcontacts/src/App.js\";\nimport React, { useState } from 'react';\nimport allContacts from './contacts.json';\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState(allContacts.slice(0, 5));\n\n  const deleteContact = contactId => {\n    setContacts(contacts => contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const addContact = () => {\n    const random = allContacts[Math.floor(Math.random() * allContacts.length)]; // checking if in the state of contacts we already have the random contact\n\n    if (contacts.find(contact => contact.id === random.id)) {\n      // checking if there is still some contacts to add\n      if (contacts.length < allContacts.length) {\n        addContact();\n      }\n\n      return;\n    }\n\n    setContacts(contacts => [random, ...contacts]);\n  };\n\n  const sortByName = () => {\n    const sorted = [...contacts];\n    sorted.sort((a, b) => a.name.localeCompare(b.name));\n    setContacts(sorted);\n  };\n\n  const sortByPopularity = () => {\n    const sorted = contacts.slice();\n    sorted.sort((a, b) => b.popularity - a.popularity);\n    setContacts(sorted);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"IronContacts\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Add Random Contact\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sortByName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Sort by name\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sortByPopularity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Sort by popularity\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Picture\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Popularity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Won an Oscar\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Won an Emmy\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, contacts.map(contact => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: contact.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: contact.pictureUrl,\n      height: \"100px\",\n      alt: contact.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, contact.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, contact.popularity.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, contact.wonOscar && '🏆'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, contact.wonEmmy && '🏆'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        deleteContact(contact.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Delete\")));\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jan/code/ironhack/bootcamp/run/w7d3/ironcontacts/src/App.js"],"names":["React","useState","allContacts","App","contacts","setContacts","slice","deleteContact","contactId","filter","contact","id","addContact","random","Math","floor","length","find","sortByName","sorted","sort","a","b","name","localeCompare","sortByPopularity","popularity","display","justifyContent","map","pictureUrl","toFixed","wonOscar","wonEmmy"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport allContacts from './contacts.json';\nimport './App.css';\n\nfunction App() {\n\n  const [contacts, setContacts] = useState(allContacts.slice(0, 5))\n\n  const deleteContact = contactId => {\n    setContacts(contacts => contacts.filter(contact => contact.id !== contactId))\n  };\n\n  const addContact = () => {\n    const random = allContacts[Math.floor(Math.random() * allContacts.length)];\n\n    // checking if in the state of contacts we already have the random contact\n    if (contacts.find(contact => contact.id === random.id)) {\n      // checking if there is still some contacts to add\n      if (contacts.length < allContacts.length) {\n        addContact();\n      }\n      return;\n    }\n    setContacts(contacts => [random, ...contacts])\n  };\n\n  const sortByName = () => {\n    const sorted = [...contacts];\n    sorted.sort((a, b) => a.name.localeCompare(b.name));\n\n    setContacts(sorted)\n  };\n\n  const sortByPopularity = () => {\n    const sorted = contacts.slice();\n    sorted.sort((a, b) => b.popularity - a.popularity);\n\n    setContacts(sorted)\n  };\n\n  return (\n    <div className='App'>\n\n      <h1>IronContacts</h1>\n\n      <button onClick={addContact}>Add Random Contact</button>\n      <button onClick={sortByName}>Sort by name</button>\n      <button onClick={sortByPopularity}>Sort by popularity</button>\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <table>\n          <thead>\n            <tr>\n              <th>Picture</th>\n              <th>Name</th>\n              <th>Popularity</th>\n              <th>Won an Oscar</th>\n              <th>Won an Emmy</th>\n            </tr>\n          </thead>\n          <tbody>\n            {contacts.map(contact => {\n              return (\n                <tr key={contact.id}>\n                  <td>\n                    <img\n                      src={contact.pictureUrl}\n                      height='100px'\n                      alt={contact.name}\n                    />\n                  </td>\n                  <td>{contact.name}</td>\n                  <td>{contact.popularity.toFixed(2)}</td>\n                  <td>{contact.wonOscar && '🏆'}</td>\n                  <td>{contact.wonEmmy && '🏆'}</td>\n                  <td>\n                    <button onClick={() => { deleteContact(contact.id) }}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}